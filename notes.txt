== Just a regular notes file ==

Structuring JSON for Backend
- Primary Goals are to:
    1. Be able to search for colors based on queries
    2. Be able to randomly get colors based on query
    3. Be able to get the photos that each query is based on. (Not entirely sure about this one)

- Issues
    1. Not sure if attaching photos to each query is useful:
        - more difficult coding wise
        - will need to attach unique key to each query
        - could help show where the colors are coming from 
        - good for double checking logic
        - not much need to double check logic because logic was not written by me?

- JSON Structure: 
    "query": {
        "search_term": {
            "key": [hex, hex, hex, hex]
        }
    }

    - This JSON structure is easy to read and understand. It also is structured in a way that makes getting information particularly easy
    - It is not speedy, when accessing the information, use batches instead of realtime updates.

- TODO:
    - Put the database insertion and update into their own function (Done)
    - Create a client to be able to access the database (Done)
    - Decide if you want to add the preference photos
    - Download a lot of photos and add them to the database (Done for the word 'sunrise')
    - Make sure to regulate the size of photos to use because we have limited space
    - display the returned colors in a table 
        - use the bootstrap-vue table library https://bootstrap-vue.js.org/docs/components/table/
    - Add it onto the Kaliedoscope Main client. 